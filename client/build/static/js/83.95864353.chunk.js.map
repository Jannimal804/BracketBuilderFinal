{"version":3,"sources":["utility/API.js","views/pages/register.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","getFromGeo","search","axios","get","concat","signUp","userData","console","log","post","getCompetitors","getMatches","beltType","weightClass","Register","props","_this","Object","c_BracketBuilderFinal_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","c_BracketBuilderFinal_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","c_BracketBuilderFinal_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleLoginErr","err","alert","responseJSON","signUpUser","e","self","c_BracketBuilderFinal_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","preventDefault","API","firstName","state","lastName","beltLevel","email","password","then","data","history","push","onChange","setState","c_BracketBuilderFinal_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","handleChecked","prevState","isChecked","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","md","type","id","placeholder","required","defaultValue","disabled","color","block","onClick","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","Component"],"mappings":"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","file":"static/js/83.95864353.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//var db = require(\"../../../models\");\n\nexport default {\n    getFromGeo: function(search){\n        return axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${search}&key=AIzaSyDZYOxZZL8kgIlC4RLfG8Gkfr8xHnZmFTc`)\n    },\n\n    signUp: function(userData) {\n        console.log(\"sending request!\");\n        return axios.post('/api/signup', userData)\n    },\n\n     // Gets all books\n    getCompetitors: function() {\n        console.log(\"requesting users!\")\n    return axios.get(\"/api/user_data\");\n  },\n  \n  getMatches: function(beltType, weightClass) {\n    console.log(\"getting matches!\")\nreturn axios.get(`/api/users/${beltType}/${weightClass}`); \n}\n\n  // Gets the book with the given id\n  //instead of ID weight & belt and tacked onto URL\n//   getCompetitor: function(beltLevel) {\n//     return axios.get(\"/api/competitors/\" + beltLevel);\n//   },\n\n  // Saves a book to the database\n//   followCompetitor: function(followCompetitor) {\n//     return axios.post(\"/api/competitors\", followCompetitor);\n//   },\n\n// allCompetitors: function(allCompetitors) {\n//     return axios.get(\"/api/competitors\")\n//     console.log(req.body);\n//     db.reactbb.findAll({}).then(function(reactbb) {\n//       res.json(reactbb);\n//  },\n\n\n//   // Create a new competitors\n// //   app.post(\"/api/competitors\", function(req, res) {\n// //     // run a query to get users that match our user's belt + weight\n// //     const userData = req.body;\n\n// //     db.Competitors.findAll({\n// //       where: { belt_color: userData.belt_color, weight: userData.weight}\n// //     }).then((matchesRes) => {\n// //       db.Competitors.create(req.body).then(() => {\n// //         res.json(matchesRes); \n// //       });      \n// //     });\n// //   });\n\n\n//   matchCompetitors: function(matchCompetitors) {\n//     db.User.findOne({\n//         where: {\n//           email: email\n//         }\n//   return axios.get(\"/api/competitors/:beltType/:weightClass\", matchCompetitors);\n//     }\n}","// import external modules\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport API from '../../utility/API';\nimport {\n   Row,\n   Col,\n   Input,\n   Form,\n   FormGroup,\n   Button,\n   Label,\n   Card,   \n   CardBody,\n   CardFooter\n} from \"reactstrap\";\n\n// signUpUser = event => {\n//    event.preventDefault();\n//    alert(`Hello ${this.state.firstName} ${this.state.lastName}`);\n//    userData.setState({\n//      firstName: \"\",\n//      lastName: \"\",\n//      beltLevel: \"\", \n//      weightClass: \"\",\n//      password: \"\",\n//      email: \"\"\n//    });\n// }\n\n// if (!userData.email || !userData.password) {\n//   return;\n// }\n\n// If we have an email and password, run the signUpUser function\n// signUpUser(userData.firstName, userData.lastName, userData.beltLevel, userData,weightClass, userData.email, userData.password);\n// emailInput.val(\"\");\n// passwordInput.val(\"\");\n\n\n// Does a post to the signup route. If successful, we are redirected to the members page\n// Otherwise we log any errors\n\n\n// fuction handleLoginErr(err) {\n// alert(err.responseJSON);\n// };\n\n\n\nclass Register extends Component {\n   // state = {\n   //    isChecked: true\n   // }\n      constructor(props) {\n      super(props);\n      this.state = {\n        firstName: \"\",\n        lastName: \"\",\n        beltLevel: \"\",\n        weightClass: \"\",\n        email: \"\",\n        password: \"\"\n      };\n   }\n\n    handleLoginErr = (err) => {\n      alert(err.responseJSON);\n   };\n\n    signUpUser = (e) => {\n       const self = this;\n        e.preventDefault();\n       console.log(\"JH\");\n      API.signUp( {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        beltLevel: this.state.beltLevel,\n        weightClass: this.state.weightClass,\n        email: this.state.email,\n        password: this.state.password\n      }).then(function(data) {\n         self.props.history.push(\"/pages/blank-page\");\n         console.log(data);\n        //window.location.replace(data);\n        // If there's an error, handle it by throwing up a bootstrap alert\n      });\n   }  \n\n \n    \n    onChange = (e) => {\n      this.setState({ [e.target.name]: e.target.value });\n  \n    }\n\n   handleChecked = e => {\n      this.setState(prevState => ({\n         isChecked: !prevState.isChecked\n      }));\n   };\n\n// onSubmit = (e) => {\n//       e.preventDefault();\n  \n//       const { firstName, lastName, beltLevel, weightClass, email, password } = this.state;\n  \n//       axios.post('/api/auth/login', { firstName, lastName, beltLevel, weightClass, email, password })\n//         .then((result) => {\n//           localStorage.setItem('jwtToken', result.data.token);\n//           this.setState({ message: '' });\n//           this.props.history.push('/')\n//         })\n//         .catch((error) => {\n//           if(error.response.status === 401) {\n//             this.setState({ message: 'Login failed. Username or password not match' });\n//           }\n//          });\n//       }\n   render() {\n      const { firstName, lastName, beltLevel, weightClass, email, password } = this.state;\n      return (\n         <div className=\"container\">\n                   <p> Hello {this.state.firstName} {this.state.lastName} \n        </p>\n            <Row className=\"full-height-vh\">\n               <Col xs=\"12\" className=\"d-flex align-items-center justify-content-center\">\n                  <Card className=\"gradient-indigo-purple text-center width-400\">\n                     <CardBody>\n                        <h2 className=\"white py-4\">Register</h2>\n                        <Form className=\"pt-2\">\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={firstName}\n                                    name=\"firstName\"\n                                    id=\"firstName\"\n                                    placeholder=\"First Name\"\n                                    onChange={this.onChange}\n                                    required\n                                 />\n                              </Col>\n                           </FormGroup>\n                           <FormGroup>\n                           <Col md=\"12\">\n                                 <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"lastName\"\n                                    value={lastName}\n                                    onChange={this.onChange}\n                                    id=\"lastName\"\n                                    placeholder=\"Last Name\"\n                                    required\n                               />\n                              </Col>\n                           </FormGroup>\n                           <FormGroup>\n                              <Col md=\"12\">\n                                          <Input type=\"select\" id=\"beltLevel\" name=\"beltLevel\" className=\"form-control\" value={beltLevel} onChange={this.onChange} >\n                                             <option value=\"none\" defaultValue=\"\" disabled=\"\">Belt Level</option>\n                                             <option value=\"White\">White</option>\n                                             <option value=\"Blue\">Blue</option>\n                                             <option value=\"Purple\">Purple</option>\n                                             <option value=\"Brown\">Brown</option>\n                                             <option value=\"Black\">Black</option>\n                                          </Input>\n                                          </Col>\n                                       </FormGroup>\n                                       <FormGroup>\n                                       <Col md=\"12\">\n                                          <Input type=\"select\" id=\"weightClass\" name=\"weightClass\" className=\"form-control\" value={weightClass} onChange={this.onChange}>\n                                             <option value=\"none\" defaultValue=\"\" disabled=\"\">Weight Class</option>\n                                             <option value=\"Light Feather\">Light Feather – 53.5 kg (118 lbs)</option>\n                                             <option value=\"Feather\">Feather – 58.5 kg (129 lbs)</option>\n                                             <option value=\"Light\">Light – 64 kg (141 lbs)</option>\n                                             <option value=\"Middle\">Middle – 69 kg (152 lbs)</option>\n                                             <option value=\"Medium Heavy\">Medium Heavy – 74 kg (163 lbs)</option>\n                                             <option value=\"Heavy\">Heavy – No Maximum Weight</option>\n                                          </Input>\n                                          </Col>\n                                       </FormGroup>\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    id=\"inputEmail\"\n                                    placeholder=\"Email\"\n                                    value={email} \n                                    onChange={this.onChange}\n                                    required\n                                 />\n                              </Col>\n                           </FormGroup>\n\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    id=\"inputPass\"\n                                    placeholder=\"Password\"\n                                    value={password} \n                                    onChange={this.onChange}\n                                    required\n                                 />\n                              </Col>\n                           </FormGroup>\n\n                           {/* <FormGroup>\n                              <Row>\n                                 <Col md=\"12\">\n                                    <div className=\"custom-control custom-checkbox mb-2 mr-sm-2 mb-sm-0 ml-3\">\n                                       <Input\n                                          type=\"checkbox\"\n                                          className=\"custom-control-input\"\n                                          checked={this.state.isChecked}\n                                          onChange={this.handleChecked}\n                                          id=\"rememberme\"\n                                       />\n                                       <Label className=\"custom-control-label float-left white\" for=\"rememberme\">\n                                          I agree terms and conditions.\n                                       </Label>\n                                    </div>\n                                 </Col>\n                              </Row>\n                           </FormGroup> */}\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Button type=\"submit\" color=\"purple\" block className=\"btn-pink btn-raised\" onClick={(e) => this.signUpUser(e)}>\n                                    Submit\n                                 </Button>\n                                 <Button type=\"button\" color=\"secondary\" block className=\"btn-raised\">\n                                    Cancel\n                                 </Button>\n                              </Col>\n                           </FormGroup>\n                        </Form>\n                     </CardBody>\n                     <CardFooter>\n                        <div className=\"float-left\">\n                           <NavLink to=\"/pages/forgot-password\" className=\"text-white\">\n                              Forgot Password?\n                           </NavLink>\n                        </div>\n                        <div className=\"float-right\">\n                           <NavLink to=\"/pages/login\" className=\"text-white\">\n                              Login\n                           </NavLink>\n                        </div>\n                     </CardFooter>\n                  </Card>\n               </Col>\n            </Row>\n         </div>\n      );\n   }\n}\n\nexport default Register;\n"],"sourceRoot":""}